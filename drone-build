#!/bin/bash
clang_path="${HOME}/linux-x86/clang-r370808/bin/clang"
gcc_path="aarch64-linux-gnu-"
gcc_32_path="arm-linux-gnueabi-"

source=`pwd`
branch=$(git rev-parse --abbrev-ref HEAD)
last_commit=$(git log --pretty=format:'%h' -1)
repo_url=https://github.com/ajaivasudeve/kernel_zuk_msm8996/commits/$(git log --format="%H" -n 1)
non_treble_patch="6e0c88429f9aed10fa8eb6a929c7ea56a8bc7ae9"
treble_patch="c014034d0001f3a1b694e78842b368571d7b0934"


args="-j$(nproc --all) O=out \
	ARCH=arm64 \
	SUBARCH=arm64 "

print (){
case ${2} in
	"red")
	echo -e "\033[31m $1 \033[0m";;

	"blue")
	echo -e "\033[34m $1 \033[0m";;

	"yellow")
	echo -e "\033[33m $1 \033[0m";;

	"purple")
	echo -e "\033[35m $1 \033[0m";;

	"sky")
	echo -e "\033[36m $1 \033[0m";;

	"green")
	echo -e "\033[32m $1 \033[0m";;

	*)
	echo $1
	;;
	esac
}

print "You are building a snapshot version: $date" yellow

args+="CC=$clang_path \
	CLANG_TRIPLE=aarch64-linux-gnu- \
	CROSS_COMPILE=$gcc_path "

args+="CROSS_COMPILE_ARM32=$gcc_32_path "

patch()
{
	curl -s https://github.com/ajaivasudeve/kernel_zuk_msm8996/commit/"${1}".patch | git am
}

clean(){
	make mrproper
	make $args mrproper
}

build_z2_plus(){
	export KBUILD_BUILD_USER="ajaivasudeve"
	export KBUILD_BUILD_HOST="slowpoke"
	START=$(date +"%s")
	clean
	print "Building Kernel for z2_plus..." blue
	make $args z2_plus_defconfig&&make $args
	if [ $? -ne 0 ]; then
    terminate "Error while building for z2_plus!"
    fi
	mkzip "z2_plus"
}

build_z2_row(){
	export KBUILD_BUILD_USER="ajaivasudeve"
	export KBUILD_BUILD_HOST="slowpoke"
	START=$(date +"%s")
	clean
	print "Building Kernel for z2_row..." blue
	make $args z2_row_defconfig&&make $args
	if [ $? -ne 0 ]; then
    terminate "Error while building for z2_row!"
    fi
	mkzip "z2_row"
}

mkzip (){
	END=$(date +"%s")
	KDURATION=`expr $END - $START`
	zipname="[${1}-$type]-droopy-kernel-$date-$time.zip"
	duration="`expr $KDURATION / 60`m `expr $KDURATION % 60`s"
	cp -f out/arch/arm64/boot/Image.gz-dtb flasher
	cd flasher
	zip -r "$zipname" *
	mv -f "$zipname" ${HOME}
	cd ${HOME}
	tg_upload "$zipname" "${1}" "$duration"
	cd $source
	print "All done.Find it at ${HOME}/$zipname" green
}

tg_upload(){
   curl -F document=@"${1}" "https://api.telegram.org/bot$BOTTOKEN/sendDocument" \
        -F chat_id="$CHATID" \
        -F "disable_web_page_preview=true" \
        -F "parse_mode=HTML" \
        -F caption="
<b>Device:</b> 
<code>${2}</code>
<b>Build Type:</b>
<code>$type</code>
<b>Branch:</b> 
<code>$branch</code>
<b>Build Duration:</b> 
<code>${3}</code>
<b>Last Commit:</b> 
<a href='$repo_url'>$last_commit</a>"
}

tg_notify(){
    curl -s -X POST "https://api.telegram.org/bot${BOTTOKEN}/sendMessage" \
                        -d chat_id="$CHATID" \
                        -d "disable_web_page_preview=true" \
                        -d "parse_mode=HTML" \
                        -d text="<code>${1}</code>"
}

terminate(){
  tg_notify "${1}"
  exit 1
}

	date="$(date +"%d-%m-%Y")"
	time="$(date +"%H-%M-%S")"
	tg_notify "[#z2_plus : $date : #$branch]"
	type="treble"
	build_z2_plus
	patch "$non_treble_patch"
	type="non-treble"
	date="$(date +"%d-%m-%Y")"
	time="$(date +"%H-%M-%S")"
	build_z2_plus
	tg_notify "▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰"

	date="$(date +"%d-%m-%Y")"
	time="$(date +"%H-%M-%S")"
	tg_notify "[#z2_row : $date : #$branch]"
	patch "$treble_patch"
	type="treble"
	build_z2_row
	patch "$non_treble_patch"
	type="non-treble"
	date="$(date +"%d-%m-%Y")"
	time="$(date +"%H-%M-%S")"
	build_z2_row
	tg_notify "▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰▰"